// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$futbet-primary: mat.define-palette(mat.$green-palette, 800, 300, 900);
$futbet-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$futbet-warn: mat.define-palette(mat.$red-palette);

$my-typography: mat.define-typography-config();

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$futbet-theme: mat.define-light-theme(
  (
    color: (
      primary: $futbet-primary,
      accent: $futbet-accent,
      warn: $futbet-warn,
    ),
    typography: $my-typography,
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($futbet-theme);

button.mat-mdc-button:not(:disabled),
button.mat-mdc-button[disabled],
button.mat-mdc-button.mat-mdc-button-disabled {
  color: var(--fb-color-white);
}

button.mat-mdc-button[disabled],
button.mat-mdc-button.mat-mdc-button-disabled {
  filter: grayscale(1);
}

futbet-league-selector {
  .mat-button-toggle-standalone.mat-button-toggle-appearance-standard
    .mat-pseudo-checkbox,
  .mat-button-toggle-group-appearance-standard .mat-pseudo-checkbox {
    --mat-minimal-pseudo-checkbox-selected-checkmark-color: var(
      --fb-color-green-2
    );
  }
}

header {
  mat-button-toggle.mat-button-toggle {
    &:not(.logo-toggle) .mat-button-toggle-label-content {
      font-size: var(--fb-font-size-small);
      // material class height change (1)
      line-height: calc(var(--fb-size-league-select-height) - 10px);
    }
  }

  .mat-mdc-form-field-type-mat-select {
    .mdc-text-field--filled:not(.mdc-text-field--disabled) {
      @apply bg-transparent;
    }

    .mat-mdc-select-value-text {
      @apply text-fb-color-white;
    }

    .mat-mdc-floating-label mat-label {
      @apply text-fb-color-white opacity-50;
    }

    .mat-mdc-form-field-subscript-wrapper {
      display: none;
    }

    .mat-mdc-select-arrow {
      @apply text-fb-color-white opacity-50;
    }

    &.mat-focused .mat-mdc-select-arrow {
      @apply text-fb-color-white opacity-50;
    }

    .mdc-text-field--filled .mdc-line-ripple::before {
      border-bottom-width: 0;
    }

    .mdc-text-field--filled:not(.mdc-text-field--disabled)
      .mdc-line-ripple::after {
      border-bottom-color: var(--fb-color-white);
    }
  }
}

/* Header League Select */
mat-option.mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled)
  .mdc-list-item__primary-text {
  color: var(--fb-color-green-1);
}
