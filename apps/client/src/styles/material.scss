// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$futbet-primary: mat.define-palette(mat.$green-palette, 800, 300, 900);
$futbet-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$futbet-warn: mat.define-palette(mat.$red-palette);

$my-typography: mat.define-typography-config();

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$futbet-theme: mat.define-light-theme(
  (
    color: (
      primary: $futbet-primary,
      accent: $futbet-accent,
      warn: $futbet-warn,
    ),
    typography: $my-typography,
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($futbet-theme);

:root {
  --mat-standard-button-toggle-shape: var(--fb-size-border-radius);
  --mdc-outlined-button-container-shape: var(--fb-size-border-radius);
}

mat-button-toggle {
  --mat-standard-button-toggle-state-layer-color: var(--fb-color-green-1);
}

.mat-ripple-element {
  background-color: var(--fb-color-green-1-light);
}
